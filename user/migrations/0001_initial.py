# Generated by Django 2.2.20 on 2024-04-05 09:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=25)),
                ('country_code', models.CharField(default=None, help_text='do not add + extension', max_length=5, null=True)),
                ('mobile_number', models.CharField(default=None, help_text='do not add country code', max_length=15, null=True)),
                ('phone_number', models.CharField(default=None, help_text='landline number', max_length=15, null=True)),
                ('role', models.PositiveSmallIntegerField(choices=[(6, 'super-admin'), (7, 'ts-employee'), (1, 'org-admin'), (2, 'org-staff'), (3, 'agent'), (4, 'sub-agent'), (5, 'staff')], default=6)),
                ('is_user_activated', models.BooleanField(default=False)),
                ('is_mail_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('otp', models.IntegerField(default=None, null=True)),
                ('otp_created_time', models.DateTimeField(default=None, null=True)),
                ('is_company', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgencyDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency_name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=True)),
                ('city', models.CharField(max_length=50)),
                ('local_gov_area', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=150)),
                ('zipcode', models.CharField(max_length=10, null=True)),
                ('website', models.CharField(max_length=100, null=True)),
                ('logo', models.CharField(max_length=1000, null=True)),
                ('cpysource', models.CharField(max_length=1000, null=True)),
                ('affid', models.CharField(max_length=1000, null=True)),
                ('is_country_editable', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'agency_detail',
            },
        ),
        migrations.CreateModel(
            name='AgentDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active'), (2, 'Under Verification'), (3, 'Approved'), (4, 'Rejected')], default=2)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_agency', to='user.AgencyDetail')),
                ('parent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agent_to_parent', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'agent_detail',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=200)),
                ('module_description', models.TextField(blank=True, default=None, null=True)),
                ('status', models.BooleanField(default=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='module_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'module',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('domain', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('orgranization_name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=True)),
                ('city', models.CharField(max_length=50)),
                ('local_gov_area', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=150)),
                ('zipcode', models.CharField(max_length=150)),
                ('website', models.CharField(blank=True, max_length=100)),
                ('logo', models.CharField(blank=True, max_length=1000)),
                ('cpysource', models.CharField(max_length=1000)),
                ('affid', models.CharField(blank=True, max_length=1000)),
                ('domainurl', models.CharField(max_length=1000)),
                ('notifcatione_mail', models.EmailField(max_length=254, null=True)),
                ('payment_notification_email', models.EmailField(max_length=254, null=True)),
            ],
            options={
                'db_table': 'orgranization',
            },
        ),
        migrations.CreateModel(
            name='PermissionRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('status', models.BooleanField(default=True)),
                ('for_agent', models.BooleanField(default=False)),
                ('for_tsemployee', models.BooleanField(default=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_permission', to='user.Module')),
            ],
            options={
                'db_table': 'permission_rule',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Flight', max_length=50)),
                ('desc', models.TextField(null=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_permission', models.BooleanField(default=False)),
                ('write_permission', models.BooleanField(default=False)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.PermissionRule')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permission_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_permission',
            },
        ),
        migrations.CreateModel(
            name='StaffDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=150)),
                ('zipcode', models.CharField(max_length=10)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_agency', to='user.AgencyDetail')),
                ('parent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_to_parent', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_details', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'staff_detail',
            },
        ),
        migrations.AddField(
            model_name='permissionrule',
            name='product',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_permission', to='user.Product'),
        ),
        migrations.AddField(
            model_name='permissionrule',
            name='updated_by',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rules_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AgentStatusLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active'), (2, 'Under Verification'), (3, 'Approved'), (4, 'Rejected')])),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('note', models.TextField(null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_status', to='user.AgentDetail')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'agent_status_log',
            },
        ),
        migrations.AddField(
            model_name='agencydetail',
            name='organization',
            field=models.ForeignKey(default='TS_NG', on_delete=django.db.models.deletion.CASCADE, to='user.Organization'),
        ),
        migrations.AddField(
            model_name='agencydetail',
            name='parent',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.AgencyDetail'),
        ),
        migrations.AddField(
            model_name='user',
            name='agency',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.AgencyDetail'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='organization',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.Organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('email', 'organization')},
        ),
    ]
